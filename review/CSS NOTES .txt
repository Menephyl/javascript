CSS NOTES :

A linguagem de marcação CSS É A Segunda da tríade e a mais importante na estilização do documento. O "shape tanquinho ou "bumbum na nuca" do front-end básico. 

Conceitualmente, o Css é a folha de estilo em cascata, parte de estilização e design do projeto de site e/ou aplicação. 

É importante saber o básico do básico do html para ser capaz de entender os efeitos do Css e sua importância numa página.

Profissionalmente, é linkado no inicio do html, dentro da tag <title> .... <link: rel="stilesheets" href="style.css"></title> de forma que quando um navegador redenriza um documento, ele combina o documento com suas informações de estilo.

cada .body{} ; .body > div{} ; .body .div .h1 .p {} é um "seletor de estilo" e por isso a analogia do termo 

    display: grid;  /* define o modelo de layout do elemento como uma grade */

/* DISPLAY * TOTAL e vamos passar rapidamente por cada um deles
block: Um elemento com display: block sempre inicia em uma nova linha e ocupa toda a largura disponível.
Ele empilha verticalmente um sobre o outro.

inline: Um elemento com display: inline não inicia em uma nova linha e apenas ocupa o espaço necessário para o conteúdo.
Elementos inline não aceitam largura (width) e altura (height).

inline-block: Um elemento com display: inline-block combina características de elementos inline e block.
Ele não inicia uma nova linha e permite a definição de largura e altura.

flex: A propriedade display: flex é usada para criar um contêiner flexível.
Os itens dentro do contêiner flexível podem ser ajustados em termos de tamanho, ordem e alinhamento.

grid: A propriedade display: grid é usada para criar um contêiner de layout em grade.
Permite definir um layout bidimensional com linhas e colunas, facilitando o posicionamento de elementos.

inline-flex:Similar ao flex, mas o contêiner flexível é tratado como um elemento inline.

table, table-row, table-cell: Esses valores de display são usados para criar layouts semelhantes a tabelas.

none: Um elemento com display: none é completamente removido do fluxo de layout e não é renderizado na tela.
*/

/* relative:
    Comportamento em relação a si mesmo: O elemento é posicionado em relação à sua posição original.
    Mantém espaço original: O espaço original que o elemento ocuparia não é alterado, mas você pode movê-lo com top, right, bottom ou left. */

/* absolute:
                          Comportamento em relação ao ancestral posicionado mais próximo ou ao elemento raiz (se nenhum ancestral estiver posicionado).
                          Remove do fluxo normal: O elemento é removido do fluxo normal do documento, o que significa que outros elementos agem como se o elemento não estivesse presente. *


  width: 100%; /* Ocupa toda a largura disponível */
    height: auto; /* Altura automática, ajusta conforme o conteúdo */


Esta propriedade fornece uma identificação única ao elemento. Pode ser usado para referenciar o elemento em scripts JavaScript ou para associar rótulos através do atributo for em uma tag <label>.
type="text":

Define o tipo de entrada como texto. Isso cria um campo de entrada de texto simples.
autocorrect="off":

Controla se o recurso de correção automática do navegador deve ser ativado ou desativado para o campo de entrada. Neste caso, está definido como "off", desativando a correção automática.
maxlength="800":

Limita o número máximo de caracteres que podem ser inseridos no campo de entrada. Neste caso, está definido como 800, então o usuário não poderá digitar mais de 800 caracteres.
autocapitalize="off":

Controla se o navegador deve automaticamente capitalizar o texto inserido no campo. Aqui, está definido como "off", desativando a autocapitalização.
spellcheck="false":

Determina se o navegador deve verificar a ortografia no campo de entrada. Neste caso, está definido como "false", desativando a verificação ortográfica.
placeholder=" que você quer ouvir?":

Fornece um texto de dica que aparece no campo de entrada antes que o usuário insira algum texto. Neste exemplo, o texto é "que você quer ouvir?".
value="":

Define o valor inicial do campo de entrada. Neste caso, o campo é inicializado como vazio.
Essas propriedades são usadas para personalizar o comportamento e a aparência do campo de entrada de texto de acordo com as necessidades do desenvolvedor.
-->

